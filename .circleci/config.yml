# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: cimg/php:8.0.3

    steps:
      - add_ssh_keys
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo apt-get install -y rsync libpng-dev
            sudo apt-get install php-sqlite3
      #            sudo docker-php-ext-install zip
      #            sudo docker-php-ext-install gd

      - run:
          name: "Create Environment file"
          command: |
            mv .env.testing .env

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install --no-dev -n --prefer-dist -o

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: "Generate App key"
          command: php artisan key:generate

      # Add the server to known hosts
      - run: ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      #run tests with phpunit
      - run:
          name: "Run Unit Tests"
          command: php artisan test

      - run:
          name: "Deploy Over SSH"
          command: |
            rsync -avce ssh ./ $SSH_USER@$SSH_HOST:/srv/backend

      - run:
          name: "Get production environment"
          command: |
            ssh $SSH_USER@$SSH_HOST "
            cp -rf /srv/.env.api /srv/backend/.env &&
            cd /srv/backend &&
            php artisan route:cache
            php artisan config:cache
            "
#            cp -rf /srv/global.php.api /srv/backend/config/global.php &&

